package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	query1 "cqrs-es-example-go/query/graph/model"
	"fmt"
)

// GetGroupChat is the resolver for the getGroupChat field.
func (r *queryRootResolver) GetGroupChat(ctx context.Context, groupChatID string, accountID string) (*query1.GroupChat, error) {
	panic(fmt.Errorf("not implemented: GetGroupChat - getGroupChat"))
}

// GetGroupChats is the resolver for the getGroupChats field.
func (r *queryRootResolver) GetGroupChats(ctx context.Context, accountID string) ([]*query1.GroupChat, error) {
	panic(fmt.Errorf("not implemented: GetGroupChats - getGroupChats"))
}

// GetMember is the resolver for the getMember field.
func (r *queryRootResolver) GetMember(ctx context.Context, groupChatID string, accountID string) (*query1.Member, error) {
	panic(fmt.Errorf("not implemented: GetMember - getMember"))
}

// GetMembers is the resolver for the getMembers field.
func (r *queryRootResolver) GetMembers(ctx context.Context, groupChatID string, accountID string) ([]*query1.Member, error) {
	panic(fmt.Errorf("not implemented: GetMembers - getMembers"))
}

// GetMessage is the resolver for the getMessage field.
func (r *queryRootResolver) GetMessage(ctx context.Context, messageID string, accountID string) (*query1.Message, error) {
	panic(fmt.Errorf("not implemented: GetMessage - getMessage"))
}

// GetMessages is the resolver for the getMessages field.
func (r *queryRootResolver) GetMessages(ctx context.Context, groupChatID string, accountID string) ([]*query1.Message, error) {
	panic(fmt.Errorf("not implemented: GetMessages - getMessages"))
}

// GroupChats is the resolver for the groupChats field.
func (r *subscriptionRootResolver) GroupChats(ctx context.Context, groupChatID string) (<-chan string, error) {
	panic(fmt.Errorf("not implemented: GroupChats - groupChats"))
}

// QueryRoot returns QueryRootResolver implementation.
func (r *Resolver) QueryRoot() QueryRootResolver { return &queryRootResolver{r} }

// SubscriptionRoot returns SubscriptionRootResolver implementation.
func (r *Resolver) SubscriptionRoot() SubscriptionRootResolver { return &subscriptionRootResolver{r} }

type queryRootResolver struct{ *Resolver }
type subscriptionRootResolver struct{ *Resolver }
